eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"spinner-button-demo-app/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"spinner-button-demo-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=spinner-button-demo-app/app.js");

;eval("define(\"spinner-button-demo-app/components/spin-spinner\", \n  [\"ember-spin-spinner/components/spin-spinner\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var SpinSpinnerComponent = __dependency1__[\"default\"];\n\n    \r\n    __exports__[\"default\"] = SpinSpinnerComponent;\n  });//# sourceURL=spinner-button-demo-app/components/spin-spinner.js");

;eval("define(\"spinner-button-demo-app/components/spinner-button\", \n  [\"ember-spinner-button/components/spinner-button\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var SpinnerButtonComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = SpinnerButtonComponent;\n  });//# sourceURL=spinner-button-demo-app/components/spinner-button.js");

;eval("define(\"spinner-button-demo-app/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      isBusy: false,\n\n      actions: {\n        makeBusy: function () {\n          this.set(\'isBusy\', true);\n        }\n      }\n    });\n  });//# sourceURL=spinner-button-demo-app/controllers/application.js");

;eval("define(\"spinner-button-demo-app/router\", \n  [\"ember\",\"spinner-button-demo-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=spinner-button-demo-app/router.js");

;eval("define(\"spinner-button-demo-app/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n      I\'m a spinner-button!\\n    \");\n      }\n\n      data.buffer.push(\"<section class=\\\"container\\\">\\n  <h1 id=\'title\'>Ember spinner-button Demo</h2>\\n\\n  <p>This is a demo application for the Ember spinner-button component. Documentation for this component can be found\\n    <a href=\\\"\\\">here</a>. The source for this demo application can be found\\n    <a href=\\\"\\\">here</a>.\\n  </p>\\n\\n  <p>This demo uses Twitter Bootstrap, which affects the appearence of the spinner-button as you would expect.</p>\\n\\n  <p>This isSpinning property of this button is bound to the isBusy property on the application controller. You can use\\n    the checkbox to toggle the value of isBusy. Clicking the button sends a \'makeBusy\' event to the controller. The\\n    handler for this event on the controller sets isBusy to true.\\n  </p>\\n\\n  <p>\\n    <label>\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'name\': (\"isBusy\"),\n        \'checked\': (\"isBusy\")\n      },hashTypes:{\'type\': \"STRING\",\'name\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'name\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n      isBusy\\n    </label>\\n  </p>\\n\\n  <p>\\n    \");\n      stack1 = (helper = helpers[\'spinner-button\'] || (depth0 && depth0[\'spinner-button\']),options={hash:{\n        \'class\': (\"btn btn-primary\"),\n        \'action\': (\"makeBusy\"),\n        \'isSpinning\': (\"isBusy\")\n      },hashTypes:{\'class\': \"STRING\",\'action\': \"STRING\",\'isSpinning\': \"ID\"},hashContexts:{\'class\': depth0,\'action\': depth0,\'isSpinning\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"spinner-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </p>\\n</section>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=spinner-button-demo-app/templates/application.js");

;eval("define(\"spinner-button-demo-app/templates/components/spinner-button\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'spin-spinner\'] || (depth0 && depth0[\'spin-spinner\']),options={hash:{\n        \'lines\': (\"lines\"),\n        \'length\': (\"length\"),\n        \'width\': (\"width\"),\n        \'radius\': (\"radius\"),\n        \'corners\': (\"corners\"),\n        \'rotate\': (\"rotate\"),\n        \'direction\': (\"direction\"),\n        \'speed\': (\"speed\"),\n        \'trail\': (\"trail\"),\n        \'shadow\': (\"shadow\"),\n        \'hwaccel\': (\"hwaccel\"),\n        \'color\': (\"color\"),\n        \'left\': (\"left\"),\n        \'top\': (\"top\")\n      },hashTypes:{\'lines\': \"ID\",\'length\': \"ID\",\'width\': \"ID\",\'radius\': \"ID\",\'corners\': \"ID\",\'rotate\': \"ID\",\'direction\': \"ID\",\'speed\': \"ID\",\'trail\': \"ID\",\'shadow\': \"ID\",\'hwaccel\': \"ID\",\'color\': \"ID\",\'left\': \"ID\",\'top\': \"ID\"},hashContexts:{\'lines\': depth0,\'length\': depth0,\'width\': depth0,\'radius\': depth0,\'corners\': depth0,\'rotate\': depth0,\'direction\': depth0,\'speed\': depth0,\'trail\': depth0,\'shadow\': depth0,\'hwaccel\': depth0,\'color\': depth0,\'left\': depth0,\'top\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"spin-spinner\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      stack1 = helpers[\'if\'].call(depth0, \"isSpinning\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=spinner-button-demo-app/templates/components/spinner-button.js");

;eval("define(\"spinner-button-demo-app/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=spinner-button-demo-app/tests/app.jshint.js");

;eval("define(\"spinner-button-demo-app/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=spinner-button-demo-app/tests/controllers/application.jshint.js");

;eval("define(\"spinner-button-demo-app/tests/helpers/resolver\", \n  [\"ember/resolver\",\"spinner-button-demo-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=spinner-button-demo-app/tests/helpers/resolver.js");

;eval("define(\"spinner-button-demo-app/tests/helpers/start-app\", \n  [\"ember\",\"spinner-button-demo-app/app\",\"spinner-button-demo-app/router\",\"spinner-button-demo-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=spinner-button-demo-app/tests/helpers/start-app.js");

;eval("define(\"spinner-button-demo-app/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=spinner-button-demo-app/tests/router.jshint.js");

;eval("define(\"spinner-button-demo-app/tests/spinner-button-demo-app/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - spinner-button-demo-app/tests/helpers\');\n    test(\'spinner-button-demo-app/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'spinner-button-demo-app/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=spinner-button-demo-app/tests/spinner-button-demo-app/tests/helpers/resolver.jshint.js");

;eval("define(\"spinner-button-demo-app/tests/spinner-button-demo-app/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - spinner-button-demo-app/tests/helpers\');\n    test(\'spinner-button-demo-app/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'spinner-button-demo-app/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=spinner-button-demo-app/tests/spinner-button-demo-app/tests/helpers/start-app.jshint.js");

;eval("define(\"spinner-button-demo-app/tests/spinner-button-demo-app/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - spinner-button-demo-app/tests\');\n    test(\'spinner-button-demo-app/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'spinner-button-demo-app/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=spinner-button-demo-app/tests/spinner-button-demo-app/tests/test-helper.jshint.js");

;eval("define(\"spinner-button-demo-app/tests/test-helper\", \n  [\"spinner-button-demo-app/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=spinner-button-demo-app/tests/test-helper.js");

/* jshint ignore:start */

define('spinner-button-demo-app/config/environment', ['ember'], function(Ember) {
  var metaName = 'spinner-button-demo-app/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
});

if (runningTests) {
  require('spinner-button-demo-app/tests/test-helper');
} else {
  require('spinner-button-demo-app/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
